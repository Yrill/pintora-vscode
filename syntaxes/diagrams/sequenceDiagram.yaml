- comment: Sequence Diagram
  begin: \b(sequenceDiagram)
  beginCaptures:
    '1':
      name: keyword.control.pintora
  patterns:
    - match: (\%%|#).*
      name: comment
    - comment: '(title)'
      match: !regex |-
        (title)\s*(:)\s+ # title
        (\s*["\(\)$&%\^/#.,?!:*+=<>\'\\\-\w\s]*) # text
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: keyword.control.pintora
        '3':
          name: string
    - comment: '(participant)(Actor)(as)?(Label)?'
      match: !regex |-
        \s*(participant) # participant
        \s+(["\(\)$&%\^/#.?!*=<>\'\\\w\s]+?) # Actor
        (?:\s+(as))? # as?
        \s(["\(\)$&%\^/#.,?!*=<>\'\\\w\s]+)? # Label?
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: variable
        '3':
          name: keyword.control.pintora
        '4':
          name: string
    - comment: '(activate/deactivate)(Actor)'
      match: !regex |-
        \s*((?:de)?activate) # Activate/Deactivate
        \s+(\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*) # Actor
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: variable
    - comment: '(note)(direction)(Actor)(,)?(Actor)?(:)(Message)'
      match: !regex |-
        \s*(note|@note) # Note
        \s+((?:left|right)\sof|over) # Direction
        \s+(\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*) # Actor
        (,)? # ,?
        (\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*)? # Actor
        (:) # :
        (?:\s+([^;#]*))? # Message
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: entity.name.function.pintora
        '3':
          name: variable
        '4':
          name: keyword.control.pintora
        '5':
          name: variable
        '6':
          name: keyword.control.pintora
        '7':
          name: string
    - comment: 'Multiline note'
      begin: !regex |-
        (@note)
        \s+((?:left|right)\sof|over) # Direction
        \s+(\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*) #Actor
        (,)? # ,?
        (\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*)? # Actor
        \n
      end: '(@end_note)'
      beginCaptures:
        '1':
          name: keyword.control.pintora
        '2':
          name: entity.name.function.pintora
        '3':
          name: variable
        '4':
          name: keyword.control.pintora
        '5':
          name: variable
      endCaptures:
        '1':
          name: keyword.control.pintora
    - comment: '(loop)(loop text)'
      match: !regex |-
        \s*(loop) # loop
        (?:\s+([^;#]*))? # Loop Text
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: string
    - comment: '(end)'
      match: \s*(end)
      captures:
        '1':
          name: keyword.control.pintora
    - comment: '(alt/else/opt/par/and/autonumber)(text)'
      match: !regex |-
        \s*(alt|else|opt|par|and|rect|autonumber) # alt/else/opt/par/and/rect/autonumber
        (?:\s+([^#;]*))? # text
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: string
    - comment: '(Actor)(Arrow)(Actor)(:)(Message)'
      match: !regex |-
        \s*
        (\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b) # Actor
        \s*
        (-?-(?:\>|x|\))\>?[+-]?) # Arrow
        \s*
        (["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b) # Actor
        \s*
        (:) # :
        \s*
        ([^;#]*) # Message
      captures:
        '1':
          name: variable
        '2':
          name: keyword.control.pintora
        '3':
          name: variable
        '4':
          name: keyword.control.pintora
        '5':
          name: string
    - comment: 'divider'
      match: !regex |-
        \s*(==)\s+(.*)\s+(==)
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: variable
        '3':
          name: keyword.control.pintora
    - include: '#config__clause'
  end: (^|\G)(?=\s*[`~]{3,}\s*$)
